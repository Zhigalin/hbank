<?php

### A PDO Wrapper, ver 0.6 ###

class DB {
	static $connection;

	static function init() {
		global $_SETTINGS;

		$host     = $_SETTINGS['database']['host'];
		$dbname   = $_SETTINGS['database']['name'];
		$user     = $_SETTINGS['database']['user'];
		$pass     = $_SETTINGS['database']['pass'];

		self::$connection = new PDO('mysql:host='.$host.';dbname='.$dbname, $user, $pass, array(PDO::ATTR_PERSISTENT => true));
		self::$connection->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);
		self::$connection->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_WARNING);
	}

	static function execPrep($query, $prep) {
		$PDOStatementObject = self::$connection->prepare($query, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY));
		if ($PDOStatementObject->execute($prep)===true) {
			return $PDOStatementObject->fetchAll(PDO::FETCH_ASSOC);
		} else {
			return false;
		}
	}

	static function exec($query) {
		$PDOStatementObject = self::$connection->prepare($query, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY));
		if ($PDOStatementObject->execute()===true) {
			return $PDOStatementObject->fetchAll(PDO::FETCH_ASSOC);
		} else {
			return false;
		}
	}

	static function count($table, $condition = false) {
		$query = 'SELECT COUNT(*) FROM `';
		$query .= $condition ? $table.'` WHERE '.$condition : $table.'`';
		$PDOStatementObject = self::$connection->prepare($query, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY));
		if ($PDOStatementObject->execute()===true) {
			$temp = $PDOStatementObject->fetchAll(PDO::FETCH_NUM); #to ensure backward compatibility with PHP < 5.4
			return $temp[0][0];
		} else {
			return false;
		}
	}


	static function insert($query, $prep) {
		$PDOStatementObject = self::$connection->prepare($query, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY));
		var_dump($PDOStatementObject);#debug
		return $PDOStatementObject->execute($prep);
	}
}

?>